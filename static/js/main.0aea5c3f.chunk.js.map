{"version":3,"sources":["components/ListItem/ListItem.jsx","components/App/App.jsx","reportWebVitals.js","index.js"],"names":["ListItem","listItems","this","props","items","map","item","className","style","backgroundColor","bg_color","textDecoration","txt_deco","content","onClick","deleteItems","key","completeItems","btn_color","status","Component","window","id","App","state","data","current_data","current_bulk_data","handleInput","bind","addItem","addBulkItem","handleBulkInput","event","setState","target","value","preventDefault","new_data","filteredItems","filter","forEach","split","obj","prevState","concat","onSubmit","onChange","placeholder","type","rows","cols","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aea5c3f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./ListItem.css\";\r\n\r\nexport default class ListItem extends Component{    \r\n\r\n    render(){\r\n        const items = this.props.items;\r\n        const listItems = items.map(item =>\r\n            {\r\n                return <div className=\"listContainer\">\r\n                    <p className=\"data\" style={{backgroundColor:item.bg_color, textDecoration:item.txt_deco}}><strong>{item.content}</strong></p>\r\n                    <button className=\"delete\" onClick={() => {this.props.deleteItems(item.key)}}>Delete</button>\r\n                    <button className=\"complete\" onClick={() => {this.props.completeItems(item.key)}} style={{backgroundColor:item.btn_color}}>{item.status}</button>\r\n                    <br/><br/><br/>\r\n                </div>\r\n            })\r\n        return(\r\n            <div>{listItems}</div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport ListItems from \"../ListItem/ListItem\";\r\n\r\nwindow.id = 0;\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      current_data: {\r\n        content: \"\",\r\n        status: \"Not Completed\",\r\n        btn_color: \"red\",\r\n        bg_color: \"lightblue\",\r\n        key: window.id,\r\n      },\r\n      current_bulk_data: {\r\n        content: \"\",\r\n        status: \"Not Completed\",\r\n        btn_color: \"red\",\r\n        bg_color: \"lightblue\",\r\n        key: window.id,\r\n      },\r\n    };\r\n\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.addItem = this.addItem.bind(this);\r\n    this.deleteItems = this.deleteItems.bind(this);\r\n    this.completeItems = this.completeItems.bind(this);\r\n    this.addBulkItem = this.addBulkItem.bind(this);\r\n    this.handleBulkInput = this.handleBulkInput.bind(this);\r\n  }\r\n\r\n  handleInput(event) {\r\n    this.setState({\r\n      current_data: {\r\n        content: event.target.value,\r\n        status: \"Not Completed\",\r\n        btn_color: \"red\",\r\n        bg_color: \"lightblue\",\r\n        txt_deco: \"none\",\r\n        key: window.id++,\r\n      },\r\n    });\r\n  }\r\n\r\n  addItem(event) {\r\n    event.preventDefault();\r\n    const new_data = this.state.current_data;\r\n\r\n    if (new_data.content !== \"\") {\r\n      const items = [...this.state.data, new_data];\r\n      this.setState({ data: items, current_data: { content: \"\", key: \"\" } });\r\n    }\r\n  }\r\n\r\n  deleteItems(key) {\r\n    const filteredItems = this.state.data.filter((item) => item.key !== key);\r\n\r\n    this.setState({ data: filteredItems });\r\n  }\r\n\r\n  completeItems(key) {\r\n    this.state.data.forEach((item) => {\r\n      if (item.key === key) {\r\n        item.btn_color = \"lightgreen\";\r\n        item.bg_color = \"#e3405b\";\r\n        item.txt_deco = \"line-through\";\r\n        item.status = \"Completed\";\r\n      }\r\n    });\r\n\r\n    this.setState({ data: this.state.data });\r\n  }\r\n\r\n  handleBulkInput(event) {\r\n    this.setState({\r\n      current_bulk_data: {\r\n        content: event.target.value,\r\n        status: \"Not Completed\",\r\n        btn_color: \"red\",\r\n        bg_color: \"lightblue\",\r\n        txt_deco: \"none\",\r\n        key: window.id++,\r\n      },\r\n    });\r\n  }\r\n\r\n  addBulkItem(event) {\r\n    event.preventDefault();\r\n    const new_data = this.state.current_bulk_data.content.split(\",\");\r\n    if (new_data !== \"\") {\r\n      new_data.forEach((item) => {\r\n        const obj = {\r\n          content: item,\r\n          status: \"Not Completed\",\r\n          btn_color: \"red\",\r\n          bg_color: \"lightblue\",\r\n          txt_deco: \"none\",\r\n          key: window.id++,\r\n        };\r\n\r\n        if (obj.content !== \"\") {\r\n          this.setState((prevState) => {\r\n            return { data: prevState.data.concat(obj) };\r\n          });\r\n        }\r\n      });\r\n      this.setState({\r\n        current_bulk_data: {\r\n          content: \"\",\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Noter App</h1>\r\n        <form id=\"single\" onSubmit={this.addItem}>\r\n          <input\r\n            value={this.state.current_data.content}\r\n            onChange={this.handleInput}\r\n            placeholder=\"Enter single item\"\r\n          />\r\n          <button type=\"submit\">\r\n            <strong>Add</strong>\r\n          </button>\r\n        </form>\r\n        <br />\r\n        <br />\r\n        <form id=\"multi\" onSubmit={this.addBulkItem}>\r\n          <textarea\r\n            value={this.state.current_bulk_data.content}\r\n            rows=\"6\"\r\n            cols=\"100\"\r\n            onChange={this.handleBulkInput}\r\n            placeholder=\"Enter multiple items seperated by , (comma)\"\r\n          />\r\n          <br />\r\n          <br />\r\n          <button type=\"submit\">\r\n            <strong>Bulk Add</strong>\r\n          </button>\r\n        </form>\r\n        <br />\r\n        <br />\r\n        <ListItems\r\n          items={this.state.data}\r\n          deleteItems={this.deleteItems}\r\n          completeItems={this.completeItems}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}